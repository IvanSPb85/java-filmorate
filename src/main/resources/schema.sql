DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS film_rating CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS film_genre CASCADE;

CREATE TABLE IF NOT EXISTS  users (
    user_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR NOT NULL,
    login VARCHAR NOT NULL,
    name VARCHAR,
    birthday DATE);

CREATE TABLE IF NOT EXISTS mpa (
    mpa_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL);

CREATE TABLE IF NOT EXISTS films (
    film_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL,
    description VARCHAR(200) NOT NULL,
    release_date VARCHAR NOT NULL CHECK (release_date > '1895-12-28'),
    duration VARCHAR NOT NULL CHECK (duration > 0),
    mpa_id INT NOT NULL,
    FOREIGN KEY (mpa_id) REFERENCES mpa (mpa_id));

CREATE TABLE IF NOT EXISTS film_rating (
    film_id INT NOT NULL REFERENCES films (film_id),
    user_id INT NOT NULL REFERENCES users (user_id),
    PRIMARY KEY(film_id, user_id));

CREATE TABLE IF NOT EXISTS genre (
    genre_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL);

CREATE TABLE IF NOT EXISTS film_genre (
    genre_id INT NOT NULL REFERENCES genre (genre_id),
    film_id INT NOT NULL REFERENCES films (film_id),
    PRIMARY KEY(genre_id, film_id));

CREATE TABLE IF NOT EXISTS friends (
    user_id INT NOT NULL REFERENCES users (user_id),
    friend_id INT NOT NULL REFERENCES users (user_id),
    approved BOOLEAN NOT NULL,
    PRIMARY KEY(user_id, friend_id));





